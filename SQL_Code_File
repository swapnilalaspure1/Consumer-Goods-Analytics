USE gdb023;

-- Customer Table
SELECT *
FROM gdb023.dim_customer;

-- Product Table
SELECT *
FROM gdb023.dim_product;

-- Gross Price Table
SELECT *
FROM gdb023.fact_gross_price;

-- Manufacturing Cost Table
SELECT *
FROM gdb023.fact_manufacturing_cost;

-- Pre Invoice Deduction Cost Table
SELECT *
FROM gdb023.fact_pre_invoice_deductions;

-- Sales Monthly Table
SELECT *
FROM gdb023.fact_sales_monthly;
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

SELECT DISTINCT market
FROM dim_customer
WHERE customer = "Atliq Exclusive" AND region = "APAC";
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
2. What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, unique_products_2020 unique_products_2021 percentage_chg

WITH Cte20 AS (
    SELECT 
        COUNT(DISTINCT product_code) AS Unique_Prod_2020
    FROM fact_sales_monthly
    WHERE fiscal_year = '2020'
),
Cte21 AS (
    SELECT
        COUNT(DISTINCT product_code) AS Unique_Prod_2021
    FROM fact_sales_monthly
    WHERE fiscal_year = '2021'
)
SELECT 
    Cte20.Unique_Prod_2020,
    Cte21.Unique_Prod_2021,
    ROUND(
        (
            (Unique_Prod_2021 - Unique_Prod_2020) / Unique_Prod_2020
        ) * 100, 2
    ) AS Percentage_Chng
FROM Cte20, Cte21;
-- ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
3. Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields, segment product_count

SELECT segment, COUNT(DISTINCT(product_code)) AS `Product Count`
FROM dim_product
GROUP BY segment
ORDER BY `Product Count` DESC;
-- ---------------------------------------------------------------------------------------------------------------------------------------------.
4. Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, segment product_count_2020 product_count_2021 difference
WITH Cte20 AS (
		SELECT 
			P.segment, 
			COUNT(
				DISTINCT(P.product_code)
			) AS `ProductCount2020`
		FROM dim_product P
		LEFT JOIN fact_sales_monthly F ON
		P.product_code = F.product_code
		WHERE fiscal_year = '2020'
		GROUP BY segment
),
	Cte21 AS (
		SELECT 
			P.segment, 
			COUNT(
				DISTINCT(P.product_code)
			) AS `ProductCount2021`
		FROM dim_product P
		LEFT JOIN fact_sales_monthly F ON
		P.product_code = F.product_code
		WHERE fiscal_year = '2021'
		GROUP BY segment
)
SELECT 
	Cte21.segment,
	Cte20.ProductCount2020,
    Cte21.ProductCount2021,
    (Cte21.ProductCount2021 - Cte20.ProductCount2020) AS Difference
FROM Cte20 
LEFT JOIN Cte21 
ON Cte20.segment = Cte21.segment
ORDER BY Difference DESC;
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
5. Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, product_code product manufacturing_cost
SELECT 
	F.product_code,
    F.manufacturing_cost,
    P.product
FROM fact_manufacturing_cost F
LEFT JOIN dim_product P 
ON F.product_code = P.product_code
WHERE manufacturing_cost = (SELECT MAX(manufacturing_cost) AS `Highest Manufacturing Cost` FROM fact_manufacturing_cost)
							OR
	  manufacturing_cost = (SELECT MIN(manufacturing_cost) AS `Highest Manufacturing Cost` FROM fact_manufacturing_cost);

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.

6. Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields, customer_code customer average_discount_percentage
SELECT 
    F.customer_code, 
    ROUND(AVG(F.pre_invoice_discount_pct) * 100, 2) AS Average_High_Pre_Invoice_Discount
FROM fact_pre_invoice_deductions F
LEFT JOIN dim_customer D 
USING(customer_code)
WHERE F.fiscal_year = 2021 
    AND D.market = 'India'
GROUP BY F.customer_code
ORDER BY Average_High_Pre_Invoice_Discount DESC
LIMIT 5;

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high-performing months and take strategic decisions. 
The final report contains these columns: Month Year Gross sales Amount

SELECT 
    MONTHNAME(S.date) AS Month,
    S.fiscal_year AS YearS,
    ROUND(SUM(F.gross_price * S.sold_quantity), 2) AS 'Gross Sale Amount'
FROM fact_gross_price F
JOIN fact_sales_monthly S 
    ON F.product_code = S.product_code
JOIN dim_customer D 
    ON S.customer_code = D.customer_code
WHERE D.customer = 'AtliQ Exclusive'
GROUP BY MONTH(S.date), MONTHNAME(S.date), S.fiscal_year
ORDER BY S.fiscal_year, MONTH(S.date);

-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
8. In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity, Quarter total_sold_quantity
SELECT 
	CASE
        WHEN MONTH(date) IN (9,10,11) THEN 'Q1'
        WHEN MONTH (date) IN (12,01,02) THEN 'Q2'
        WHEN MONTH (date) IN (03,04,05) THEN 'Q3'
        ELSE 'Q4'
        END AS Quarters,
        SUM(sold_quantity) AS `Total Sold Qty`
        FROM fact_sales_monthly
        WHERE fiscal_year = '2020'
        GROUP BY Quarters
        ORDER BY `Total Sold Qty`;
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.
9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields, channel gross_sales_mln percentage
WITH A AS (
			SELECT
					C.channel,
					ROUND(SUM(G.gross_price*S.sold_quantity)/100000,2) AS Gross_Sales_Million
            FROM fact_sales_monthly S
            JOIN dim_customer C USING (customer_code)
            JOIN fact_gross_price G USING (product_code)
            WHERE S.fiscal_year = 2021
            GROUP BY C.channel)
SELECT 
		channel, 
		Gross_Sales_Million,
		ROUND((Gross_Sales_Million/(SELECT SUM(Gross_Sales_Million) FROM A))*100,2)
AS PCT 
FROM A
ORDER BY Gross_Sales_Million DESC;         
-- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.          
10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields, division product_code
WITH B AS  (
		SELECT 
				Q.division, 
                S.product_code,
                Q.product,
                SUM(S.sold_quantity) AS Total_Sold_Qty,
			RANK() OVER(PARTITION BY Q.division ORDER BY SUM(S.sold_quantity) DESC ) AS 'Rank_Order'
        FROM dim_product Q JOIN fact_sales_monthly S
        USING (product_code)
        WHERE S.fiscal_year = 2021
        GROUP BY Q.division,S.product_code,Q.product)
SELECT *
FROM B
WHERE Rank_Order 
IN (1,2,3) 
ORDER BY division, Rank_Order;
